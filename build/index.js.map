{"version":3,"sources":["reactiveStore.ts","index.ts"],"names":[],"mappings":";AA4Be,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5Bf,IAAM,EAAgB,SAAI,GACpB,IAAA,EAAuC,GAwBpC,MAAA,CAAE,UAtBA,SACP,EACA,GAKO,OAHP,EAAU,KAAK,IACX,MAAA,OAAO,EAAP,EAAS,oBAAmB,EAAS,GAElC,WACL,EAAgB,EAAA,EAAU,OAAO,SAAC,GAAQ,OAAA,IAAQ,OAclC,IAVX,SAAI,GACX,EAAQ,EACR,EAAU,QAAQ,SAAC,GAAS,OAAA,EAAK,MAQV,OALhB,SAAO,GACd,EAAQ,EAAS,GACjB,EAAU,QAAQ,SAAC,GAAS,OAAA,EAAK,QAMtB,EAAA,EAAA,QAAA,QAAA;;AC1BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,gBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,QAAA,aAAA,EAFf,IAAA,EAAA,EAAA,QAAA,oBAEe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,EAAA,QAAA,QAAA,QAAA","file":"index.js","sourceRoot":"../src","sourcesContent":["const reactiveStore = <T>(value: T) => {\n  let callbacks: Array<(value: T) => void> = [];\n\n  function subscribe(\n    callback: (value: T) => void,\n    options?: { runOnSubscription: boolean }\n  ): () => void {\n    callbacks.push(callback);\n    if (options?.runOnSubscription) callback(value);\n\n    return () => {\n      callbacks = [...callbacks.filter((val) => val !== callback)];\n    };\n  }\n\n  function set(newValue: T): void {\n    value = newValue;\n    callbacks.forEach((func) => func(value));\n  }\n\n  function update(callback: (currentValue: T) => T): void {\n    value = callback(value);\n    callbacks.forEach((func) => func(value));\n  }\n\n  return { subscribe, set, update };\n};\n\nexport default reactiveStore;\n","import reactiveStore from \"./reactiveStore\";\nexport { reactiveStore };\nexport default reactiveStore;\n"]}